name: CI/CD Pipeline

"on":
  push:
    branches:
      - main
jobs:
  # code-quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Setup SonarQube
  #       uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #     - name: Install Docker
  #       run: |
  #         # Install Docker here
  #         # You may use the official Docker installation script
  #         curl -fsSL https://get.docker.com | sh
  #         sudo usermod -aG docker $USER
  #         sudo systemctl enable docker
  #         sudo systemctl start docker

  #     - name: Run SonarQube Scanner
  #       run: |
  #         docker run --rm -e SONAR_HOST_URL -e SONAR_TOKEN -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli \
  #           -Dsonar.projectKey=microservices \
  #           -Dsonar.sources=. \
  #           -Dsonar.projectBaseDir=/usr/src

  build-and-deploy:
    # needs: code-quality
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: "${{ secrets.DOCKERHUB_USERNAME }}"
      DOCKERHUB_PASSWORD: "${{ secrets.DOCKERHUB_PASSWORD }}"
      SSH_PRIVATE_KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
      EC2_INSTANCE_IP: $EC2_INSTANCE_PUBLIC_IP
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

      - name: Build and Push Docker Containers
        run: |
          # Find all service directories
          for service_dir in $(find . -type d -name "*-service"); do
          original_service_name=$(basename "$service_dir")

          # Sanitize the service name by replacing spaces with hyphens
          sanitized_service_name=$(echo "$original_service_name" | tr ' ' '-')
          echo "Service Name: $sanitized_service_name"
          echo "Docker Username: $DOCKERHUB_USERNAME"  # Add this line to print Docker username

          docker build -t $DOCKERHUB_USERNAME/$sanitized_service_name "$service_dir"
          docker push $DOCKERHUB_USERNAME/$sanitized_service_name
          done

      - name: Install kubectl
        run: >
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" &&
          chmod +x kubectl &&
          sudo mv kubectl /usr/local/bin/

      - name: Copy Kubernetes Manifests to EC2
        run: |
          scp -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no -r ./kubernetes $EC2_USER@$EC2_INSTANCE_IP:/home/ubuntu/code/microservices

      - name: SSH into EC2 and Apply Manifests
        run: |
          ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_INSTANCE_IP << 'EOF'
          # Install Kind if needed
          # Apply Kubernetes manifests using kubectl or Kind
          kubectl apply -f /home/ubuntu/code/microservices/kubernetes
          EOF
